@startuml diagramme_classe

class Client {
    - id: int
    - nom: string
    - prenom: string
    - email: string
    - password: string
    - typeClient: string
    - siret: string
    - entreprise: string
    - referenceClient: string
    - coefficient: decimal
    + consulterCatalogue(): void
    + seConnecter(email: string, password: string): boolean
    + sInscrire(nom: string, email: string, password: string, typeClient: string): void
    + visualiserCommandes(): List<Commande>
    + ajouterProduitPanier(produit: Produit, quantite: int): void
    + supprimerProduitPanier(produit: Produit): void
    + validerCommande(): void
}

class Adresse {
    - id: int
    - rue: string
    - ville: string
    - typeAdresse: string
    - codePostal: string
    - pays: string
    + getAdresseComplete(): string
}

class Employe {
    - id: int
    - nom: string
    - prenom: string
    - email: string
    - password: string
    - role: string
}

class Produit {
    - id: int
    - libelleCourt: string
    - libelleLong: string
    - referenceFournisseur: string
    - prixAchatHT: decimal
    - prixVente: decimal
    - stock: int
    - actif: bool
    - photo: string
    + augmenterStock(quantite: int): void
    + reduireStock(quantite: int): void
}

class Categorie {
    - id: int
    - nom: string
    + ajouterSousCategorie(sousCategorie: Categorie): void
    + ajouterProduit(produit: Produit): void
}

class Fournisseur {
    - id: int
    - nomEntreprise: string
    - contact: string
    - telephone: string
    - siret: string
    - importateurs: boolean
    - fabricant: boolean
    + gererProduit(produit: Produit): void
}

class Commande {
    - id: int
    - dateCommande: DateTime
    - reduction: decimal
    - total: decimal
    - statutCommande: string
    - modeReglement: string
    - informationReglement: string
    + ajouterProduit(produit: Produit, quantite: int): void
    + supprimerProduit(produit: Produit): void
    + validerCommande(): boolean
}

class BonCommande {
    - id: int
    - date: DateTime
    - type: string
    - adresse: Adresse
    - total: decimal
    - produits: List<Produit>
}

class ProduitCommande {
    - Id_Produit: int
    - Id_Commande: int
    - quantite: int
}

class ProduitPanier {
    - Id_Client: int
    - Id_Produit: int
    - quantite: int
}

Client "1" -- "0..*" Commande
Commande "1" -- "1" Adresse : adresseLivraison
Commande "1" -- "1" Adresse : adresseFacturation
Client "1" -- "0..*" Adresse
Employe "1" -- "0..*" Client
Employe "1" -- "0..*" Produit : gerer
Employe "1" -- "0..*" Categorie : gerer

Produit "1" -- "0..*" Fournisseur
Produit "0..*" -- "0..*" Categorie
Categorie "0..*" -- "0..*" Categorie : sousCategories
Categorie "1" -- "0..*" Produit
Fournisseur "1" -- "0..*" Adresse
Commande "0..*" -- "0..*" BonCommande
BonCommande "1" -- "1" Adresse

Client "1" -- "0..*" ProduitCommande
Commande "1" -- "0..*" ProduitCommande
Produit "1" -- "0..*" ProduitCommande


@enduml
